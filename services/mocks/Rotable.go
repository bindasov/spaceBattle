// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Rotable is an autogenerated mock type for the Rotable type
type Rotable struct {
	mock.Mock
}

// GetProperty provides a mock function with given fields: key
func (_m *Rotable) GetProperty(key string) (interface{}, error) {
	ret := _m.Called(key)

	var r0 interface{}
	if rf, ok := ret.Get(0).(func(string) interface{}); ok {
		r0 = rf(key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SetProperty provides a mock function with given fields: key, p
func (_m *Rotable) SetProperty(key string, p interface{}) error {
	ret := _m.Called(key, p)

	var r0 error
	if rf, ok := ret.Get(0).(func(string, interface{}) error); ok {
		r0 = rf(key, p)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewRotable interface {
	mock.TestingT
	Cleanup(func())
}

// NewRotable creates a new instance of Rotable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRotable(t mockConstructorTestingTNewRotable) *Rotable {
	mock := &Rotable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
