// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "github.com/bindasov/spaceBattle/models"
	mock "github.com/stretchr/testify/mock"
)

// MoveCommand is an autogenerated mock type for the MoveCommand type
type MoveCommand struct {
	mock.Mock
}

// Execute provides a mock function with given fields:
func (_m *MoveCommand) Execute() (*models.Vector, error) {
	ret := _m.Called()

	var r0 *models.Vector
	if rf, ok := ret.Get(0).(func() *models.Vector); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Vector)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

type mockConstructorTestingTNewMoveCommand interface {
	mock.TestingT
	Cleanup(func())
}

// NewMoveCommand creates a new instance of MoveCommand. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMoveCommand(t mockConstructorTestingTNewMoveCommand) *MoveCommand {
	mock := &MoveCommand{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
