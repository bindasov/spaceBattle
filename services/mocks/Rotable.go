// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// Rotable is an autogenerated mock type for the Rotable type
type Rotable struct {
	mock.Mock
}

// GetAngularVelocity provides a mock function with given fields:
func (_m *Rotable) GetAngularVelocity() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetDirection provides a mock function with given fields:
func (_m *Rotable) GetDirection() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// GetDirectionsNumber provides a mock function with given fields:
func (_m *Rotable) GetDirectionsNumber() int {
	ret := _m.Called()

	var r0 int
	if rf, ok := ret.Get(0).(func() int); ok {
		r0 = rf()
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

// SetDirection provides a mock function with given fields: d
func (_m *Rotable) SetDirection(d int) int {
	ret := _m.Called(d)

	var r0 int
	if rf, ok := ret.Get(0).(func(int) int); ok {
		r0 = rf(d)
	} else {
		r0 = ret.Get(0).(int)
	}

	return r0
}

type mockConstructorTestingTNewRotable interface {
	mock.TestingT
	Cleanup(func())
}

// NewRotable creates a new instance of Rotable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewRotable(t mockConstructorTestingTNewRotable) *Rotable {
	mock := &Rotable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
