// Code generated by mockery v2.14.0. DO NOT EDIT.

package mocks

import (
	models "spaceBattle/models"

	mock "github.com/stretchr/testify/mock"
)

// Movable is an autogenerated mock type for the Movable type
type Movable struct {
	mock.Mock
}

// GetPosition provides a mock function with given fields:
func (_m *Movable) GetPosition() *models.Vector {
	ret := _m.Called()

	var r0 *models.Vector
	if rf, ok := ret.Get(0).(func() *models.Vector); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Vector)
		}
	}

	return r0
}

// GetVelocity provides a mock function with given fields:
func (_m *Movable) GetVelocity() *models.Vector {
	ret := _m.Called()

	var r0 *models.Vector
	if rf, ok := ret.Get(0).(func() *models.Vector); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Vector)
		}
	}

	return r0
}

// SetPosition provides a mock function with given fields: v
func (_m *Movable) SetPosition(v *models.Vector) *models.Vector {
	ret := _m.Called(v)

	var r0 *models.Vector
	if rf, ok := ret.Get(0).(func(*models.Vector) *models.Vector); ok {
		r0 = rf(v)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Vector)
		}
	}

	return r0
}

type mockConstructorTestingTNewMovable interface {
	mock.TestingT
	Cleanup(func())
}

// NewMovable creates a new instance of Movable. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewMovable(t mockConstructorTestingTNewMovable) *Movable {
	mock := &Movable{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
